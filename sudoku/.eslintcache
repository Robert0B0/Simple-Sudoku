[{"F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\index.js":"1","F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\reportWebVitals.js":"2","F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\sudoku-files\\sudoku.js":"3","F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\sudoku-files\\gameEvaluator.js":"4"},{"size":246,"mtime":1610912419866,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":3657,"mtime":1610929714173,"results":"8","hashOfConfig":"6"},{"size":2664,"mtime":1610929117521,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"8muh3m",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\index.js",[],["22","23"],"F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\reportWebVitals.js",[],["24","25"],"F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\sudoku-files\\sudoku.js",["26"],"import \"./sudoku.css\";\r\nimport solution from \"./solution.png\";\r\nimport { checktable, gameCheck } from \"./gameEvaluator\";\r\n\r\nfunction Sudoku() {\r\n\r\n    function processKeyPress(event) {\r\n        console.log(event.key);\r\n        let cell = document.querySelector(\".selected-cell\")\r\n        if (cell !== null) {\r\n            for (let i = 1; i <= 10; i++) {\r\n                if (cell.classList.contains(\"number-\" + i)) {\r\n                    cell.classList.remove(\"number-\" + i)\r\n                }\r\n            }\r\n            if (event.key in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] && event.key !== 0) {\r\n                (cell.classList.add(\"number-\" + event.key))\r\n                let coord = cell.id[5] + cell.id[6];\r\n                let number = document.querySelector('#number-' + coord);\r\n                number.textContent = `${event.key}`\r\n            }\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", processKeyPress, false);\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <hr />\r\n            <table className=\"sudoku-table center\">\r\n                <Table />\r\n            </table>\r\n            <hr />\r\n            <div className=\"center\" >\r\n                <h1>Check if correct: </h1>\r\n                <button onClick={() => checktable()}>Check</button>\r\n                <h2 id=\"evaluation\">Check!</h2>\r\n            </div>\r\n            <hr />\r\n            <img className=\"image center\" src={solution} alt=\"Solution\" />\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Table = () => {\r\n    let hint = {\r\n        \"00\": 5,\r\n        \"01\": 3,\r\n        \"04\": 7,\r\n        \"10\": 6,\r\n        \"13\": 1,\r\n        \"14\": 9,\r\n        \"15\": 5,\r\n        \"21\": 9,\r\n        \"22\": 8,\r\n        \"27\": 6,\r\n        \"30\": 8,\r\n        \"34\": 6,\r\n        \"38\": 3,\r\n        \"40\": 4,\r\n        \"43\": 8,\r\n        \"45\": 3,\r\n        \"48\": 1,\r\n        \"50\": 7,\r\n        \"54\": 2,\r\n        \"58\": 6,\r\n        \"61\": 6,\r\n        \"66\": 2,\r\n        \"67\": 8,\r\n        \"73\": 4,\r\n        \"74\": 1,\r\n        \"75\": 9,\r\n        \"78\": 5,\r\n        \"84\": 8,\r\n        \"87\": 7,\r\n        \"88\": 9\r\n    }\r\n    let Table = [];\r\n    let Row = [];\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        for (let j = 0; j < 9; j++) {\r\n            let coord = i.toString() + j.toString();\r\n            if (coord in hint) {\r\n                Row.push(<Cell row={i} column={j} value={hint[coord]} />)\r\n            } else {\r\n                Row.push(<Cell row={i} column={j} value={\"\"} />)\r\n            }\r\n\r\n        }\r\n        Table.push(<tr>{Row}</tr>);\r\n        Row = [];\r\n    }\r\n    return (\r\n        <tbody>\r\n            {Table}\r\n        </tbody >\r\n\r\n    )\r\n}\r\n\r\nconst Cell = (coordonates) => {\r\n    let cell = \"cell-\" + coordonates.row + coordonates.column;\r\n    let number = \"number-\" + coordonates.row + coordonates.column;\r\n    return (\r\n        <th>\r\n            <svg width=\"40\" height=\"40\">\r\n                <rect\r\n                    onMouseOver={(e) => { e.target.classList.toggle(\"highlighted\") }}\r\n                    onMouseLeave={(e) => { e.target.classList.toggle(\"highlighted\") }}\r\n                    onClick={(e) => {\r\n                        let prev = document.querySelector(\".selected-cell\")\r\n                        if (prev !== null) {\r\n                            prev.classList.remove(\"selected-cell\");\r\n                        }\r\n                        e.target.classList.toggle(\"selected-cell\")\r\n                    }}\r\n                    id={cell} width=\"40\" height=\"40\" className=\"box-cell\" />\r\n                <text x=\"10\" y=\"30\" fill=\"black\" id={number} className=\"number\" >{coordonates.value}</text>\r\n            </svg>\r\n        </th>\r\n    )\r\n\r\n}\r\n\r\nexport default Sudoku;\r\n\r\n\r\n","F:\\Study\\010 Programming learning\\@React Js\\Sudoku-V2\\sudoku\\src\\sudoku-files\\gameEvaluator.js",["27","28","29","30"],"export function checktable() {\r\n    let table = [\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        for (let j = 0; j < 9; j++) {\r\n            let location = \"number-\" + i.toString() + j.toString();\r\n            let cell = document.getElementById(location);\r\n            if (cell.textContent === null) {\r\n                table[i][j] = 0;\r\n            } else {\r\n                table[i][j] = cell.textContent;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (gameCheck(table)) {\r\n        let ev = document.getElementById(\"evaluation\");\r\n        ev.textContent = \"Correct!\";\r\n    } else {\r\n        let ev = document.getElementById(\"evaluation\");\r\n        ev.textContent = \"Wrong! Try again.\";\r\n    }\r\n}\r\n\r\nexport function gameCheck(matrix) {\r\n    let fv = [];\r\n    for (let i = 1; i <= 9; i++)\r\n        fv[i] = 0;\r\n    // submatrix check:\r\n    let ii = 0, jj = 0, sN = 2, sM = 2;\r\n    while (sN <= 9) {\r\n        jj = 0;\r\n        sM = 2;\r\n        while (sM <= 9) {\r\n            for (let i = ii; i <= sN; i++) {\r\n                for (let j = jj; j <= sM; j++) {\r\n                    console.log(matrix[i][j])\r\n                    if (fv[matrix[i][j]] == 0) {\r\n                        fv[matrix[i][j]] = 1;\r\n                    } else {\r\n                        return i, j, false;\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 1; i <= 9; i++)\r\n                fv[i] = 0;\r\n            jj += 3;\r\n            sM += 3;\r\n        }\r\n        ii += 3;\r\n        sN += 3;\r\n    }\r\n    // lines and columns ckeck:\r\n    for (let i = 1; i <= 9; i++)\r\n        fv[i] = 0;\r\n    for (let i = 0; i < 9; i++) {\r\n        for (let j = 0; j < 9; j++) {\r\n            if (fv[matrix[i][j]] == 0) {\r\n                fv[matrix[i][j]] = 1;\r\n            } else {\r\n                console.log('check 2: ' + matrix[i]);\r\n                return false;\r\n            }\r\n        }\r\n        for (let i = 1; i <= 9; i++)\r\n            fv[i] = 0;\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n        for (let j = 0; j < 9; j++) {\r\n            if (fv[matrix[j][i]] == 0) {\r\n                fv[matrix[j][i]] = 1;\r\n            } else {\r\n                console.log('check 3: ' + matrix[i]);\r\n                return false;\r\n            }\r\n        }\r\n        for (let i = 1; i <= 9; i++)\r\n            fv[i] = 0;\r\n    }\r\n    return true;\r\n}",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"31","replacedBy":"35"},{"ruleId":"33","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":22,"nodeType":"39","messageId":"40","endLine":3,"endColumn":31},{"ruleId":"41","severity":1,"message":"42","line":48,"column":42,"nodeType":"43","messageId":"44","endLine":48,"endColumn":44},{"ruleId":"45","severity":1,"message":"46","line":51,"column":33,"nodeType":"47","messageId":"48","endLine":51,"endColumn":34},{"ruleId":"41","severity":1,"message":"42","line":68,"column":34,"nodeType":"43","messageId":"44","endLine":68,"endColumn":36},{"ruleId":"41","severity":1,"message":"42","line":80,"column":34,"nodeType":"43","messageId":"44","endLine":80,"endColumn":36},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],"no-unused-vars","'gameCheck' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]